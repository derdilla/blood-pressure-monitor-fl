name: 'ðŸ“± Application'

on:
  push:
    branches:
      - 'main'
    paths:
      - "app/**"
      - "health_data_store/**"
      - "extendend-testing.yml"
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # ensures there are no unexpected directories needed
          sparse-checkout: |
            app
            health_data_store
      - name: Cache generated health data store
        id: cache-generated
        uses: actions/cache@v4
        with:
          path: health_data_store/lib
          key: builder-${{ hashFiles('health_data_store/pubspec.yaml', 'health_data_store/lib/*', 'health_data_store/lib/**/*dart') }}
      - name: Setup dart
        if: steps.cache-generated.outputs.cache-hit != 'true'
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
      - name: Generate code
        if: steps.cache-generated.outputs.cache-hit != 'true'
        run: dart run build_runner build
        working-directory: health_data_store
      - name: Extract Flutter version
        id: get_version
        run: |
          # This is the same function f-droid uses to ensure their builds keep succeeding:
          # https://gitlab.com/fdroid/fdroiddata/-/blob/master/metadata/com.derdilla.bloodPressureApp.yml
          VERSION=$(sed -n -E "s/.*flutter:\s*'(.*)'/\1/p" app/pubspec.yaml)
          if [ -z "$VERSION" ]; then
            echo "Error: Could not find a Flutter version specified in app/pubspec.yaml."
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get_version.outputs.version }}
          cache: true
      - name: Disable analytics
        run:
          flutter config --no-analytics --suppress-analytics
      - name: Update app dependencies
        run: flutter pub get
        working-directory: app
      - name: Generate app mock code # no efficient caching possible
        run: flutter pub run build_runner build
        working-directory: app
      - name: Run tests
        run: flutter test
        working-directory: app
  fdroid-build: # follows https://gitlab.com/fdroid/fdroiddata/-/blob/master/metadata/com.derdilla.bloodPressureApp.yml
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          sparse-checkout: |
            app
            health_data_store
      - id: vars
        run: echo "flutterVersion=$(sed -n -E "s/.*flutter:\s*'(.*)'/\1/p" app/pubspec.yaml)" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v5
        with:
          repository: 'flutter/flutter'
          ref: ${{ steps.vars.outputs.flutterVersion }}
          path: flutter
      - run: sed -i -e 's/-Xmx1536M/-Xmx4096M/' app/android/gradle.properties
      - run: |
          cd health_data_store
          ../flutter/bin/dart run build_runner build
          ../flutter/bin/dart pub get
      - run: |
          cd app
          ../flutter/bin/flutter config --no-analytics
          ../flutter/bin/flutter packages pub get
          ../flutter/bin/flutter build apk --flavor fdroid --release --obfuscate --split-debug-info=./build/debug-info
          
